[{"content":"Whenever starting a new project, it is good to get started as nice and easy as possible. The fundamental bricks for this task is to generate an environment and a basic tree of files and directories. And of course, the necessary tools to keep things working from then on.\nWhat else? We can treat our projects as packages right away, and get an awesome package manager such as poetry.\nConda, the environment-maker-manager. Let´s create the most basic python environment, where the most important thing is to have a defined working python version. To do this, we can create a conda lite-weight environment from the following .yaml file:\nname: my_env_name  channels:  - default  - conda-forge  dependencies:  - python=3.8 Please notice that a name and python version are defined inside the file. Now, we can create our very basic env.\nconda env create -f environment.yaml That´s it with conda!\nPoetry, the hard-working-friend. First, we need to install poetry using:\ncurl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python - After installing poetry, we can run the following command on the terminal.\npoetry new my_project Several files will be created to get started, among these, a pyproject.toml file which is in charge to manage our dependencies.\nNow, we can do the following:\n We can install our dependencies, if added using poetry install. Install packages for production with poetry add \u0026lt;a-name\u0026gt; Install packages for development with poetry add \u0026lt;a-name\u0026gt; --dev Remove packages with poetry remove \u0026lt;a-name\u0026gt; Show packages with poetry show  Also, if we need to run an existing project, we can do poetry init to create the .toml file.\nSharing is caring Now, we can export our conda env, which was managed by poetry.\nconda env export \u0026gt; environment.yml With this file, we can recreate our environment with conda and run poetry install to get things up and running.\nEasy as a-b-c.\n","permalink":"http://rafasacaan.github.io/pots-and-pans/posts/conda-poetry/","summary":"Whenever starting a new project, it is good to get started as nice and easy as possible. The fundamental bricks for this task is to generate an environment and a basic tree of files and directories. And of course, the necessary tools to keep things working from then on.\nWhat else? We can treat our projects as packages right away, and get an awesome package manager such as poetry.\nConda, the environment-maker-manager.","title":"Conda + Poetry"},{"content":"Remember, remember\u0026hellip;\u0026hellip;\na = c * 7  def hola():  \u0026#34;\u0026#34;\u0026#34; ahjahsjas \u0026#34;\u0026#34;\u0026#34;  a = 3 * tu  return hey dsada dasd asd adas fdaf sfadadasdasd.\n","permalink":"http://rafasacaan.github.io/pots-and-pans/posts/first-blog/","summary":"Remember, remember\u0026hellip;\u0026hellip;\na = c * 7  def hola():  \u0026#34;\u0026#34;\u0026#34; ahjahsjas \u0026#34;\u0026#34;\u0026#34;  a = 3 * tu  return hey dsada dasd asd adas fdaf sfadadasdasd.","title":"trees and rainbows"}]